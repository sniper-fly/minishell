 Memcheck, a memory error detector
 Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
 Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
 Command: ./minishell

 Conditional jump or move depends on uninitialised value(s)
 at 0x10A4F4: ft_strlen (ft_strlen.c:20)
 by 0x10AD2D: ft_strlcpy (ft_strlcpy.c:29)
 by 0x10AA49: ft_split (ft_split.c:100)
 by 0x109CAF: convert_line2str_procs (convert_line2str_procs.c:26)
 by 0x10A2CF: p_test (test_parse.c:15)
 by 0x10A478: main (test_parse.c:30)

 Conditional jump or move depends on uninitialised value(s)
 at 0x10A4F4: ft_strlen (ft_strlen.c:20)
 by 0x10AD2D: ft_strlcpy (ft_strlcpy.c:29)
 by 0x10AA49: ft_split (ft_split.c:100)
 by 0x109D26: convert_line2str_procs (convert_line2str_procs.c:34)
 by 0x10A2CF: p_test (test_parse.c:15)
 by 0x10A478: main (test_parse.c:30)


 ", " cmd1 ", " cmd 2 "}
 echo ", " echo "}
 hello"}


 ";" "|"", " cmd1 ";" ", " "}


 \; aaa"}
 bbb \|\; ", " cc"}
 a"}


 ';;' aa ", " cmd1 '|''|' ", " cmd 2 'a;' "}
 echo ", " echo "}
 hello"}


 HEAP SUMMARY:
 in use at exit: 500 bytes in 33 blocks
 total heap usage: 61 allocs, 28 frees, 1,080 bytes allocated

 LEAK SUMMARY:
 definitely lost: 112 bytes in 4 blocks
 indirectly lost: 388 bytes in 29 blocks
 possibly lost: 0 bytes in 0 blocks
 still reachable: 0 bytes in 0 blocks
 suppressed: 0 bytes in 0 blocks
 Rerun with --leak-check=full to see details of leaked memory

 For counts of detected and suppressed errors, rerun with: -v
 Use --track-origins=yes to see where uninitialised values come from
 ERROR SUMMARY: 14 errors from 2 contexts (suppressed: 0 from 0)
